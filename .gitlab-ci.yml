image: registry.gitlab.com/rawveg_modules/test-environment:develop

services:
  - mysql:latest

variables:
  STAGING_REGISTRY: "registry.gitlab.com"
  CONTAINER_TEST_IMAGE: ${STAGING_REGISTRY}/pillboxmodules/${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}_test
  CONTAINER_RELEASE_IMAGE: ${STAGING_REGISTRY}/pillboxmodules/${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}
  MYSQL_HOST: mysql
  MYSQL_DATABASE: ${CI_PROJECT_NAME}
  MYSQL_ROOT_PASSWORD: magento2
  MYSQL_USER: magento2
  MYSQL_PASSWORD: magento2

# before_script:
#  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $STAGING_REGISTRY

stages:
  - build

build:
  stage: build
  script:
  # First we need to install Magento 2 in order to use it for testing
  - cd /builds/magento2
  - php bin/magento setup:install --base-url="http://yoururl.com/" --db-host=$MYSQL_HOST --db-name=$MYSQL_DATABASE --db-user=$MYSQL_USER --db-password=$MYSQL_PASSWORD --admin-firstname="admin" --admin-lastname="admin" --admin-email="user@example.com" --admin-user="admin" --admin-password="admin123" --language="en_US" --currency="USD" --timezone="America/Chicago" --use-rewrites="1" --backend-frontname="admin"
  # Setup an alias for the command
  - cd /builds/magento2
  - mkdir -p app/code/Pillbox
  - ln -nsf /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME} app/code/Pillbox/Module
  - alias unit-test='/builds/magento2/vendor/bin/phpunit -c /builds/magento2/dev/tests/unit/phpunit.xml.dist'
  # Now that we've installed we need to run the tests
  # phpunit -c /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/phpunit-pillbox.xml --bootstrap /builds/magento2/dev/tests/unit/framework/bootstrap.php
  - unit-test app/code/Pillbox/Module
  when: manual
  only:
  - develop
